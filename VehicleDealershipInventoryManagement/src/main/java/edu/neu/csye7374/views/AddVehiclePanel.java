/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.csye7374.views;

import edu.neu.csye7374.Builder.VehicleBuilder;
import edu.neu.csye7374.Vehicle;
import edu.neu.csye7374.VehicleAPI;
import edu.neu.csye7374.VehicleCategory;
import edu.neu.csye7374.Factory.VehicleFactory;
import edu.neu.csye7374.Manufacturer;
import edu.neu.csye7374.FileUtil.GeneralFileUtil;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.UUID;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

/**
 *
 * @author vineeth reddy
 */
public class AddVehiclePanel extends javax.swing.JPanel {

    private List<VehicleAPI> vehicleList = new ArrayList<>();
    private static AddVehiclePanel instance = null;
    private MainFrame mainFrameRef;
    private String CARS_FILE_NAME = "VehiclesData.txt";
    private static String MFR_FILE_NAME = "ManufacturesData.csv";

    /**
     * Creates new form AddVehiclesPanel
     */
    public AddVehiclePanel() {
    	setBackground(new Color(0, 255, 255));
        initComponents();
        loadData();
    }

    public static AddVehiclePanel getInstance() {
        if (instance == null) {
            instance = new AddVehiclePanel();
        }
        return instance;
    }

    public List<VehicleAPI> getVehicleList() {
        return this.vehicleList;

    }

    private void loadData() {
        List<String> rawData = GeneralFileUtil.readFile(CARS_FILE_NAME);
        for (String line : rawData) {
            VehicleBuilder vehicleBuilder = new VehicleBuilder(line);
            vehicleList.add(vehicleBuilder.build());
        }
        populateVehiclesTable();
        
        List<String> rawManData = GeneralFileUtil.readFile(MFR_FILE_NAME);
        vehicleManufacturer.removeAllItems();
        for (String line : rawManData) {
            vehicleManufacturer.addItem(line.strip().split(",")[0]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vehicleTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel9.setBackground(new Color(192, 192, 192));
        vehicleCreateBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        vehicleName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        vehiclePrice = new javax.swing.JTextField();
        vehicleManufacturer = new javax.swing.JComboBox<>();
        vehicleCategory = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        vehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vehicle Id", "Name", "Category", "Manufacturer", "Buy Price", "Rent Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vehicleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vehiclesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vehicleTable);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Mfr. Name");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new Color(0, 0, 0));
        jLabel9.setText("Add Your Vehicle Here");

        vehicleCreateBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        vehicleCreateBtn.setText("Create");
        vehicleCreateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vehicleCreateBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vehicleCreateBtnMouseExited(evt);
            }
        });
        vehicleCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleCreateBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        vehicleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Category");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Price");

        vehiclePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiclePriceActionPerformed(evt);
            }
        });

        vehicleManufacturer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vehicleManufacturerMouseClicked(evt);
            }
        });
        vehicleManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleManufacturerActionPerformed(evt);
            }
        });

        vehicleCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SUV", "SPORTS", "MINIVAN", "LIMO", "SEDAN" }));
        vehicleCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleCategoryActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Add Vehicle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap(276, Short.MAX_VALUE)
        			.addComponent(jLabel10)
        			.addGap(354))
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(vehicleCreateBtn, GroupLayout.PREFERRED_SIZE, 726, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(31)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(vehiclePrice, GroupLayout.PREFERRED_SIZE, 218, GroupLayout.PREFERRED_SIZE)
        							.addGap(65)
        							.addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(vehicleManufacturer, GroupLayout.PREFERRED_SIZE, 259, GroupLayout.PREFERRED_SIZE))
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 214, GroupLayout.PREFERRED_SIZE)
        								.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        									.addGap(369)
        									.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE))
        								.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        									.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addComponent(vehicleName, GroupLayout.PREFERRED_SIZE, 218, GroupLayout.PREFERRED_SIZE)))
        							.addGap(18)
        							.addComponent(vehicleCategory, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        		.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(jLabel10))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(63)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 239, GroupLayout.PREFERRED_SIZE)))
        			.addGap(27)
        			.addComponent(jLabel9)
        			.addPreferredGap(ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(vehicleName, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel1)
        				.addComponent(jLabel5)
        				.addComponent(vehicleCategory, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(vehiclePrice, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel2)
        				.addComponent(jLabel6)
        				.addComponent(vehicleManufacturer, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        			.addComponent(vehicleCreateBtn, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        			.addGap(35))
        );
        this.setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents

    private void vehiclesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehiclesTableMouseClicked
//        // TODO add your handling code here:
//        if(booksTable.getSelectedRow() != -1){
//            Book book = booksList.get(booksTable.getSelectedRow());
//            vehicleId.setText(book.getId());
//            vehicleName.setText(book.getBookName());
//            vehiclePrice.setText(book.getBookAuthor());
//            vehicleMfr.setText(book.getBookPublisher());
//            vehicleCategory.setText(String.valueOf(book.getBookEdition()));
//            bookQuantity.setText(String.valueOf(book.getBookQuantity()));
//            booksRemaining.setText(String.valueOf(book.getRemainingBooks()));
//            bookCreateBtn.setEnabled(false);
//            bookUpdateBtn.setEnabled(true);
//            bookDeleteBtn.setEnabled(true);
//            vehicleId.setEnabled(false);
//        }
//        else{
//            vehicleId.setText("");
//            vehicleName.setText("");
//            vehiclePrice.setText("");
//            vehicleMfr.setText("");
//            vehicleCategory.setText("");
//            bookQuantity.setText("");
//            booksRemaining.setText("");
//            bookCreateBtn.setEnabled(true);
//            bookUpdateBtn.setEnabled(false);
//            bookDeleteBtn.setEnabled(false);
//        }


    }//GEN-LAST:event_vehiclesTableMouseClicked

    private void vehicleCreateBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehicleCreateBtnMouseEntered
        // TODO add your handling code here:
        vehicleCreateBtn.setBackground(new Color(0, 0, 0));
        vehicleCreateBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_vehicleCreateBtnMouseEntered

    private void vehicleCreateBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehicleCreateBtnMouseExited
        // TODO add your handling code here:
        vehicleCreateBtn.setBackground(new Color(255, 255, 255));
        vehicleCreateBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_vehicleCreateBtnMouseExited

    private void vehicleCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleCreateBtnActionPerformed
        // TODO add your handling code here:
        
        int maxId = -1;
        
        for(VehicleAPI vehicle: vehicleList){
           maxId = Math.max(maxId, vehicle.getVehicleId());            
        }
        int id = maxId + 1;
        String name = vehicleName.getText();
        double price = Double.parseDouble(vehiclePrice.getText());
        String mfr = vehicleManufacturer.getSelectedItem().toString();
        String category = vehicleCategory.getSelectedItem().toString();
        VehicleCategory categoryEnumVal = VehicleCategory.getVehicleCategory(category.toLowerCase());

//        if(vehicleList.stream().map(vehicle -> vehicle.getVehicleId()).toList().contains("id")){
//            JOptionPane.showMessageDialog(this, "Vehicle with this ID already exists");
//            return;
//        }
        VehicleBuilder vehicleBuilder = new VehicleBuilder(id, name, price, categoryEnumVal, mfr);
        VehicleAPI vehicle = VehicleFactory.getInstance().getObject(vehicleBuilder);
        vehicleList.add((Vehicle) vehicle);
//      OperatingSystem.getInstance().writeBooks();

        String lineToFile = id + "," + name + "," + category + "," + mfr + "," + price ;
        GeneralFileUtil.writeFile(CARS_FILE_NAME, lineToFile, false);

        
        vehicleName.setText("");
        vehiclePrice.setText("");
        
        populateVehiclesTable();


    }//GEN-LAST:event_vehicleCreateBtnActionPerformed

    private void vehicleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vehicleNameActionPerformed

    private void vehiclePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiclePriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vehiclePriceActionPerformed

    private void vehicleManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleManufacturerActionPerformed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_vehicleManufacturerActionPerformed

    private void vehicleCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vehicleCategoryActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void vehicleManufacturerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehicleManufacturerMouseClicked
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_vehicleManufacturerMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> vehicleCategory;
    private javax.swing.JButton vehicleCreateBtn;
    private javax.swing.JComboBox<String> vehicleManufacturer;
    private javax.swing.JTextField vehicleName;
    private javax.swing.JTextField vehiclePrice;
    private javax.swing.JTable vehicleTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateVehiclesTable() {
        DefaultTableModel model = (DefaultTableModel) vehicleTable.getModel();
        model.setRowCount(0);

         for(VehicleAPI vehicle : vehicleList){
            Object[] row = new Object[6];
            
            String[] vehicleString = vehicle.toString().split(",");
            int i;
            for (i = 0; i < 5; i++) {
                row[i] = vehicleString[i];
            }
            row[i] = vehicle.getVehicleRentPrice();
            
            model.addRow(row);
        }
    }

    void setMainFrame(MainFrame aThis) {
        this.mainFrameRef = aThis;
    }
}
