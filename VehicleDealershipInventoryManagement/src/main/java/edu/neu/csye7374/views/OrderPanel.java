/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.csye7374.views;

import edu.neu.csye7374.Vehicle;
import edu.neu.csye7374.VehicleAPI;
import edu.neu.csye7374.Command.Invoker;
import edu.neu.csye7374.Decorator.VehicleDecorator;
import edu.neu.csye7374.Decorator.DashCamDecorator;
import edu.neu.csye7374.Decorator.SeatCoverDecorator;
import edu.neu.csye7374.Facade.VehicleDeliveryType;
import edu.neu.csye7374.Facade.VehicleOrderFacade;
import edu.neu.csye7374.Observer.VehicleOrder;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vineeth reddy
 */
public class OrderPanel extends javax.swing.JPanel {
    private static OrderPanel instance=null;

    
    private VehicleAPI selectedVehicle = null;
    private VehicleOrder currentOrder = null;
    private MainFrame mainFrameRef;
    /**
     * Creates new form StartOrderPanel
     */
    public OrderPanel() {
    	setBackground(new Color(255, 255, 128));
        initComponents();
        populateVehiclesTable();
    }
    
    
    public static OrderPanel getInstance(){
        if(instance == null){
            instance= new OrderPanel();
        }
        return instance;
    }
    
    void setMainFrame(MainFrame aThis) {
        this.mainFrameRef = aThis;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        purchaseOptions = new javax.swing.ButtonGroup();
        deliveryOptions = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehiclesTable = new javax.swing.JTable();
        insurance = new javax.swing.JCheckBox();
        dashcam = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        seatcovers = new javax.swing.JCheckBox();
        applyDecoratorsAndNext = new javax.swing.JButton();
        selectVehicle = new javax.swing.JButton();
        vehiclesRefreshBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        buyRBtn = new javax.swing.JRadioButton();
        rentRBtn = new javax.swing.JRadioButton();
        pickupRBtn = new javax.swing.JRadioButton();
        deliveryRBtn = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(793, 581));
        setPreferredSize(new java.awt.Dimension(793, 581));

        vehiclesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vehicle Id", "Name", "Category", "Manufacturer", "Buy Price", "Rent Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vehiclesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vehiclesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vehiclesTable);

        insurance.setSelected(true);
        insurance.setText("Insurance (Mandatory)");
        insurance.setEnabled(false);
        insurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceActionPerformed(evt);
            }
        });

        dashcam.setText("Dashcam");
        dashcam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashcamActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Additional Modifications");

        seatcovers.setText("Seat Covers");

        applyDecoratorsAndNext.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        applyDecoratorsAndNext.setText("Next");
        applyDecoratorsAndNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                applyDecoratorsAndNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                applyDecoratorsAndNextMouseExited(evt);
            }
        });
        applyDecoratorsAndNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDecoratorsAndNextActionPerformed(evt);
            }
        });

        selectVehicle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        selectVehicle.setText("Select Vehicle");
        selectVehicle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selectVehicleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectVehicleMouseExited(evt);
            }
        });
        selectVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectVehicleActionPerformed(evt);
            }
        });

        vehiclesRefreshBtn.setText("Refresh");
        vehiclesRefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiclesRefreshBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Purchase options");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Delivery Type");

        purchaseOptions.add(buyRBtn);
        buyRBtn.setText("Buy");

        purchaseOptions.add(rentRBtn);
        rentRBtn.setText("Rent");

        deliveryOptions.add(pickupRBtn);
        pickupRBtn.setText("Pick-Up");
        pickupRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickupRBtnActionPerformed(evt);
            }
        });

        deliveryOptions.add(deliveryRBtn);
        deliveryRBtn.setText("Delivery");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Add Order");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(applyDecoratorsAndNext, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(216, 216, 216)
                        .addComponent(vehiclesRefreshBtn)
                        .addGap(10, 10, 10))
                    .addComponent(selectVehicle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buyRBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(rentRBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pickupRBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(deliveryRBtn))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(insurance)
                                .addGap(18, 18, 18)
                                .addComponent(dashcam)
                                .addGap(18, 18, 18)
                                .addComponent(seatcovers))
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(vehiclesRefreshBtn))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(buyRBtn)
                    .addComponent(rentRBtn))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pickupRBtn)
                    .addComponent(deliveryRBtn))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insurance)
                    .addComponent(dashcam)
                    .addComponent(seatcovers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(applyDecoratorsAndNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void vehiclesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehiclesTableMouseClicked
        //        // TODO add your handling code here:
        //        if(booksTable.getSelectedRow() != -1){
            //            Book book = booksList.get(booksTable.getSelectedRow());
            //            vehicleId.setText(book.getId());
            //            vehicleName.setText(book.getBookName());
            //            vehiclePrice.setText(book.getBookAuthor());
            //            vehicleMfr.setText(book.getBookPublisher());
            //            vehicleCategory.setText(String.valueOf(book.getBookEdition()));
            //            bookQuantity.setText(String.valueOf(book.getBookQuantity()));
            //            booksRemaining.setText(String.valueOf(book.getRemainingBooks()));
            //            bookCreateBtn.setEnabled(false);
            //            bookUpdateBtn.setEnabled(true);
            //            bookDeleteBtn.setEnabled(true);
            //            vehicleId.setEnabled(false);
            //        }
        //        else{
            //            vehicleId.setText("");
            //            vehicleName.setText("");
            //            vehiclePrice.setText("");
            //            vehicleMfr.setText("");
            //            vehicleCategory.setText("");
            //            bookQuantity.setText("");
            //            booksRemaining.setText("");
            //            bookCreateBtn.setEnabled(true);
            //            bookUpdateBtn.setEnabled(false);
            //            bookDeleteBtn.setEnabled(false);
            //        }
    }//GEN-LAST:event_vehiclesTableMouseClicked

    private void insuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insuranceActionPerformed

    private void applyDecoratorsAndNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applyDecoratorsAndNextMouseEntered
        // TODO add your handling code here:
        applyDecoratorsAndNext.setBackground(new Color(0,0,0));
        applyDecoratorsAndNext.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_applyDecoratorsAndNextMouseEntered

    private void applyDecoratorsAndNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applyDecoratorsAndNextMouseExited
        // TODO add your handling code here:
        applyDecoratorsAndNext.setBackground(new Color(255,255,255));
        applyDecoratorsAndNext.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_applyDecoratorsAndNextMouseExited

    private void applyDecoratorsAndNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDecoratorsAndNextActionPerformed
        // TODO add your handling code here:
        if(selectedVehicle == null){
            JOptionPane.showMessageDialog(this, "Please select a vehicle before proceeding");
        }else{
            ButtonModel purchaseOptionsSelection= purchaseOptions.getSelection();
            if(purchaseOptionsSelection != null){
                Invoker invoker= new Invoker();
                ArrayList<Vehicle> selectedVehicles= new ArrayList<>();
                selectedVehicles.add((Vehicle) this.selectedVehicle);
                
                String val= "";
                if(rentRBtn.isSelected()){
                    val="rent";
                }else{
                    val="buy";
                }
                
                if(val.equalsIgnoreCase("rent")){
                    invoker.rentVehicleOrders(selectedVehicles);
                }else{
                    invoker.placeVehicleOrders(selectedVehicles);
                }
            }
            
            VehicleOrderFacade orderFacade = new VehicleOrderFacade(selectedVehicle);
            this.currentOrder= orderFacade.vehicleOrder();
            this.selectedVehicle = orderFacade.getVehicle();
            
            ButtonModel deliveryOptionsSelection= deliveryOptions.getSelection();
            if(deliveryOptionsSelection != null){
                String val= "";
                if(pickupRBtn.isSelected()){
                    this.currentOrder.setVehicleDeliveryType(VehicleDeliveryType.Pickup);
                }else{
                    this.currentOrder.setVehicleDeliveryType(VehicleDeliveryType.Delivery);
                }
            }
            
            if(dashcam.isSelected()){
                VehicleDecorator decoratedVehicle= new DashCamDecorator(selectedVehicle);
                this.selectedVehicle = decoratedVehicle;
            }
            
            if(seatcovers.isSelected()){
                VehicleDecorator decoratedVehicle= new SeatCoverDecorator(selectedVehicle);
                this.selectedVehicle = decoratedVehicle;
            }
            
            
            OrderSummary os= OrderSummary.getInstance();
            os.setMainFrame(mainFrameRef);
            os.setActiveVehicle(this.selectedVehicle);
            os.setActiveOrder(this.currentOrder);
            os.setLabelValues();
            this.selectedVehicle = null;
            this.currentOrder = null;
            this.purchaseOptions.clearSelection();
            this.deliveryOptions.clearSelection();
            this.dashcam.setSelected(false);
            this.seatcovers.setSelected(false);
            this.mainFrameRef.getMainSplitPanel().setRightComponent(os);
        }
    }//GEN-LAST:event_applyDecoratorsAndNextActionPerformed

    private void selectVehicleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectVehicleMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_selectVehicleMouseEntered

    private void selectVehicleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectVehicleMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_selectVehicleMouseExited

    private void selectVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectVehicleActionPerformed
        // TODO add your handling code here:
        if(vehiclesTable.getSelectedRow() != -1){
            int selected = vehiclesTable.getSelectedRow();
            int vehicleId = Integer.parseInt(vehiclesTable.getValueAt(selected, 0).toString());
            for(VehicleAPI vehicle: AddVehiclePanel.getInstance().getVehicleList()){
                if(vehicle.getVehicleId() == vehicleId){
                    this.selectedVehicle = vehicle;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a vehicle");
        }
    }//GEN-LAST:event_selectVehicleActionPerformed

    private void vehiclesRefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiclesRefreshBtnActionPerformed
        // TODO add your handling code here:
        populateVehiclesTable();
    }//GEN-LAST:event_vehiclesRefreshBtnActionPerformed

    private void dashcamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashcamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dashcamActionPerformed

    private void pickupRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickupRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickupRBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyDecoratorsAndNext;
    private javax.swing.JRadioButton buyRBtn;
    private javax.swing.JButton vehiclesRefreshBtn;
    private javax.swing.JTable vehiclesTable;
    private javax.swing.JCheckBox dashcam;
    private javax.swing.ButtonGroup deliveryOptions;
    private javax.swing.JRadioButton deliveryRBtn;
    private javax.swing.JCheckBox insurance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton pickupRBtn;
    private javax.swing.ButtonGroup purchaseOptions;
    private javax.swing.JRadioButton rentRBtn;
    private javax.swing.JCheckBox seatcovers;
    private javax.swing.JButton selectVehicle;
    // End of variables declaration//GEN-END:variables

    private void populateVehiclesTable(){
        
        DefaultTableModel model = (DefaultTableModel) vehiclesTable.getModel();
        model.setRowCount(0);
        List<VehicleAPI> vehicleList= AddVehiclePanel.getInstance().getVehicleList();
        for(VehicleAPI vehicle : vehicleList){
            Object[] row = new Object[6];
            
            String[] vehicleString = vehicle.toString().split(",");
            int i;
            for (i = 0; i < 5; i++) {
                row[i] = vehicleString[i];
            }
            row[i] = vehicle.getVehicleRentPrice();
            
            model.addRow(row);
        }
    }
}
